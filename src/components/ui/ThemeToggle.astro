---
import SunIcon from "@icons/Sun.astro"
import MoonIcon from "@icons/Moon.astro"
import SystemIcon from "@icons/System.astro"

const THEMES = ["Light", "Dark", "System"]
---

<div class="relative mx-1">
  <button
    id="theme-toggle-btn"
    class="appearance-none flex p-2 border-none hover:text-purple-400 hover:scale-125 transition-transform"
  >
    <span class="sr-only">Choose a theme</span>
    <SunIcon id="light" class="theme-toggle-icon size-5 transition-all" />
    <MoonIcon
      id="dark"
      class="theme-toggle-icon absolute size-5 transition-all"
    />
    <SystemIcon
      id="system"
      class="theme-toggle-icon absolute size-5 transition-all"
    />
  </button>
  <div
    id="themes-menu"
    class="absolute opacity-0 scale-80 top-8 right-0 text-sm p-1 min-w-[8rem] rounded-md border border-gray-100 bg-purple-50 dark:bg-neutral-900 dark:border-gray-500/20 shadow-[0_3px_10px_rgb(0,0,0,0.2)] backdrop-blur-md"
  >
    <ul>
      {
        THEMES.map((theme) => (
          <li
            tabindex="0"
            class="themes-menu-option px-2 py-1.5 cursor-default hover:bg-purple-300/80 dark:hover:bg-purple-500/70 rounded-sm"
          >
            {theme}
          </li>
        ))
      }
    </ul>
  </div>
</div>

<style>
  #themes-menu.open {
    animation: scale-up-center 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
  }

  @keyframes scale-up-center {
    from {
      transform: scale(0.8);
      opacity: 0;
    }
    to {
      transform: scale(1);
      opacity: 1;
    }
  }
</style>

<script is:inline>
  const matchMedia = window.matchMedia("(prefers-color-scheme: dark)")
  const themesMenu = document.getElementById("themes-menu")
  let remove = null

  function getThemePreference() {
    if (typeof localStorage !== "undefined") {
      return localStorage.getItem("theme") ?? "system"
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light"
  }

  function updateIcon(themePreference) {
    document.querySelectorAll(".theme-toggle-icon").forEach((element) => {
      element.style.scale = element.id === themePreference ? "1" : "0"
    })
  }

  function updateTheme() {
    if (remove != null) remove()
    matchMedia.addEventListener("change", updateTheme)
    remove = () => matchMedia.removeEventListener("change", updateTheme)

    const themePreference = getThemePreference()
    const isDark =
      themePreference === "dark" ||
      (themePreference === "system" && matchMedia.matches)

    updateIcon(themePreference)
    document.documentElement.classList[isDark ? "add" : "remove"]("dark")
  }

  updateTheme()
  document.addEventListener("click", () => themesMenu.classList.remove("open"))

  document
    .getElementById("theme-toggle-btn")
    .addEventListener("click", (ev) => {
      ev.stopPropagation()
      const isClosed = !themesMenu.classList.contains("open")
      themesMenu.classList[isClosed ? "add" : "remove"]("open")
    })
  document.querySelectorAll(".themes-menu-option").forEach((element) => {
    element.addEventListener("click", (ev) => {
      localStorage.setItem("theme", ev.target.innerText.toLowerCase().trim())
      updateTheme()
    })
    element.addEventListener("keydown", (ev) => {
      if (ev.key === "Enter") {
        localStorage.setItem("theme", ev.target.innerText.toLowerCase().trim())
        updateTheme()
      }
    })
  })
</script>
