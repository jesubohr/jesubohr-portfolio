---
import { markdownToHtml, dateFormat, relativeTime } from "@utils/format"

interface Props {
  title: string
  company: string
  description: string
  startDate: string
  endDate?: string
  link?: string
}

const { title, company, description, link, startDate, endDate } = Astro.props
---

<div
  class="relative mx-12 pb-12 grid before:absolute before:left-[-35px] before:block before:h-full before:border-l-2 before:border-black/20 dark:before:border-white/15 before:content-[''] md:grid-cols-5 md:gap-10 md:space-x-4]"
>
  <div class="relative pb-12 md:col-span-2">
    <div class="sticky top-0">
      <span
        class="absolute -left-[42px] text-5xl leading-[0.65] text-purple-500 dark:text-purple-400"
      >
        &bull;
      </span>

      <h3 class="text-xl font-bold text-purple-500 dark:text-purple-400">
        {title}
      </h3>
      {
        link ? (
          <a
            href={link}
            class="font-semibold text-lg text-gray-600 dark:text-white hover:underline"
          >
            {company}
          </a>
        ) : (
          <h4 class="font-semibold text-lg text-gray-600 dark:text-white">
            {company}
          </h4>
        )
      }
      <time
        class="flex flex-wrap gap-2 text-sm text-gray-600/80 dark:text-white/80"
      >
        <span>
          {dateFormat(startDate)} -
          {endDate == null ? "Present" : dateFormat(endDate)}
        </span>
        <span>&bull;</span>
        <span
          >{relativeTime(startDate, endDate ?? new Date().toDateString())}</span
        >
      </time>
    </div>
  </div>
  <div
    class="relative flex flex-col gap-2 pb-4 text-gray-600 dark:text-gray-300 md:col-span-3"
  >
    <p class="text-pretty" set:html={markdownToHtml(description)} />
  </div>
</div>
